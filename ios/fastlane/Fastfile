# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  # Load App Store Connect API Key once
  before_all do
    @api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_P8"],
      is_key_content_base64: true,
      in_house: false
    )
  end

  lane :prepare_signing do
    # CI setup
    if ENV['CI']
      setup_ci

      # Create and unlock a custom keychain
      keychain_name = "build.keychain"
      delete_keychain(name: keychain_name) if File.exist?(File.expand_path("~/Library/Keychains/#{keychain_name}-db"))
      create_keychain(
        name: keychain_name,
        password: "",
        default_keychain: true,
        unlock: true,
        timeout: 3600
      )

      # Import certificate from CI secrets (if provided)
      if ENV["CERTIFICATE_BASE64"]
        sh("echo '#{ENV["CERTIFICATE_BASE64"]}' | base64 --decode > certificate.p12")
        import_certificate(
          certificate_path: "certificate.p12",
          certificate_password: ENV["CERTIFICATE_PASSWORD"],
          keychain_name: keychain_name
        )
      end
    end

    # Match to sync certificates and profiles
    match(
      type: "appstore",
      git_url: "git@github.com:ayemereodia2/codesigning.git",
      app_identifier: "com.popcart.africa.vax",
      team_id: "LB5YMG5W6W",
      api_key: @api_key,
      readonly: ENV['CI'], # Readonly in CI, writable locally
      force: !ENV['CI'],  # Force regeneration locally to sync
      verbose: true
    )
  end

  lane :beta_do do
    prepare_signing

    build_app(
      scheme: "production"
    )
    upload_to_testflight(
      api_key: @api_key,
      skip_waiting_for_build_processing: true
    )
  end

  desc "Build and upload to TestFlight"
  lane :ios_build_upload_testflight do
    beta_do
  end
end
