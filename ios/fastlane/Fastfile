# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

# platform :ios do
#   desc "Push a new beta build to TestFlight"
#   lane :beta do
#     increment_build_number(xcodeproj: "Runner.xcodeproj")
#     build_app(workspace: "Runner.xcworkspace", scheme: "Runner")
#     upload_to_testflight
#   end
# end

# frozen_string_literal: true

# Ensure this file is in the ios/ directory of your Flutter project
platform :ios do
  # #####################################################
  # # Load App Store Connect API Key for authentication #
  # #####################################################
  #desc "Load ASC API Key information to use in subsequent lanes"
  def api_key_load
    key_id = ENV["APP_STORE_CONNECT_KEY_ID"]
    issuer_id = ENV["APP_STORE_CONNECT_ISSUER_ID"]
    key_content = ENV["APP_STORE_CONNECT_P8"]

    app_store_connect_api_key(
      key_id: key_id,
      issuer_id: issuer_id,
      key_content: key_content,
      is_key_content_base64: true,
      in_house: false # Set to true if using an in-house (enterprise) account
    )
  end


  lane :beta_do do
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    setup_ci if ENV['CI']
    
    get_certificates(
    development: false,
    api_key: api_key_load,
    team_id: "LB5YMG5W6W",
    generate_apple_certs: true
  )


match(
    type: "appstore",
    git_url: "https://ayemereodia2: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@github.com/ayemereodia2/codesigning.git", # Or SSH URL
    app_identifier: "com.popcart.africa.vax",
    team_id: "LB5YMG5W6W",
    api_key: api_key_load,
    readonly: true # Use readonly in CI to avoid modifications
  )


  # get_provisioning_profile(
  #   adhoc: true,
  #   force: true,
  #   api_key: api_key,
  #   filename: "Popcart_provision_profile2025.mobileprovision"
  # )
    build_app(
    scheme: "production" 
  )
    upload_to_testflight(api_key: api_key_load, skip_waiting_for_build_processing: true)
  end

  #####################################################
  # Full Build and Upload Workflow                    #
  #####################################################
  desc "Build and upload to TestFlight"
  lane :ios_build_upload_testflight do
    #load_asc_api_key
    #prepare_signing
    #setup_flutter
    #fetch_and_increment_build_number
    beta_do
    #build_release
    #upload_release
  end
end



# # Build the app using gym
    # gym(
    #   scheme: "production",
    #   output_name: "Popcart-iOS",
    #   configuration: "Release-production",
    #   export_options: {
    #     method: "app-store",
    #     provisioningProfiles: {
    #       app_identifier => "Popcart provision profile MarchX"
    #     }
    #   },
    #   workspace: "ios/Runner.xcworkspace"
    # )

    # # Log the IPA path
    # ipa_path = "build/ios/ipa/Popcart-iOS.ipa"
    # UI.success("IPA built at: #{ipa_path}")


     # Disable automatic signing to ensure correct code signing identity
    #  update_code_signing_settings(
    #   use_automatic_signing: false,
    #   targets: ["Runner"], # Update if you have multiple targets
    #   code_sign_identity: "Apple Distribution", # Verify this matches your certificate
    #   bundle_identifier: app_identifier,
    #   profile_name: profile_name,
    #   build_configurations: ["Release"]
    # )

    # target_file = ENV["FLUTTER_TARGET"] || "lib/main.dart"

    # Dir.chdir("..") do
    #   sh("bundle update")
    #   sh("flutter build ios --release --flavor=production --target=#{target_file} --verbose")
    # end