# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

# platform :ios do
#   desc "Push a new beta build to TestFlight"
#   lane :beta do
#     increment_build_number(xcodeproj: "Runner.xcodeproj")
#     build_app(workspace: "Runner.xcworkspace", scheme: "Runner")
#     upload_to_testflight
#   end
# end

platform :ios do
  desc "Load ASC API Key information to use in subsequent lanes"
  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: "K9AKBV7B7K",
      issuer_id: "b2f0cbda-586d-4c72-a6bd-8391cf2a5082",
      key_content: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR1RBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJIa3dkd0lCQVFRZ1dCSlBWNG5ZZThGTUFqVEUKV0xQVk1CcWxTN0ZZeTRxRzJocWRrck1qdk1xZ0NnWUlLb1pJemowREFRZWhSQU5DQUFUaVBTbHBqNEQ4RFY3cApmbVZrQVRkcWIyWEp6ZFdvQWw3U2xKRW5RU1gvWnlJL204ZWpIVVFkckJkK29TQ21WYnlSNjlpVStTVnhqNjMxCmhjUXBBVEdPCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=",
      is_key_content_base64: true,
      in_house: false # detecting this via ASC private key not currently supported
    )
  end
 end

 desc "Bump build number based on most recent TestFlight build number"
lane :fetch_and_increment_build_number do
 #fetch read your app identifier defined in your Appfile
 app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
 api_key = "Aye5089mere@"

 current_version = get_version_number(
   target: "Runner" # replace with your main target, required if you have more than one non-test target
 )
 latest_build_number = latest_testflight_build_number(
   api_key: api_key,
   version: current_version,
   app_identifier: app_identifier
 )
 increment_build_number(
   build_number: (latest_build_number + 1),
 )
end

desc "Installs signing certificate in the keychain and downloads provisioning profiles from App Store Connect"
 lane :prepare_signing do |options|
   team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
   api_key = "Aye5089mere@"

   keychain_name = "signing"
   keychain_password = "Aye5089mere@"

   delete_keychain(
     name: keychain_name
   ) if File.exist? File.expand_path("~/Library/Keychains/#{keychain_name}-db")

   create_keychain(
     name: keychain_name,
     password: keychain_password,
     default_keychain: true,
     unlock: true,
     timeout: 3600
   )

   import_certificate(
     certificate_path: ENV["CERTIFICATE_BASE64"],
     certificate_password: ENV["CERTIFICATE_PASSWORD"],
     keychain_name: keychain_name,
     keychain_password: keychain_password
   )

   # fetches and installs provisioning profiles from ASC
   sigh(
     adhoc: options[:adhoc],
     api_key: api_key,
     readonly: true
   )
 end

 desc "Build the iOS app for release"
lane :build_release do |options|
 app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

 profile_name = "Popcart provision profile MarchX" # replace with the name of the profile to use for the build
 output_name = "Popcart-iOS" # specify the name of the .ipa file to generate
 export_method = "app-store" # specify the export method

 # turn off automatic signing during build so correct code signing identity is guaranteed to be used
 update_code_signing_settings(
   use_automatic_signing: false,
   targets: ["Runner"], # specify which targets to update code signing settings for
   code_sign_identity: "Apple Distribution", # replace with name of code signing identity if different
   bundle_identifier: app_identifier,
   profile_name: profile_name,
   build_configurations: ["Release"] # only toggle code signing settings for Release configurations
 )

 # build the app
 gym(
   scheme: "production", # replace with name of your project’s scheme
   output_name: output_name,
   configuration: "Release",
   export_options: {
     method: export_method,
     provisioningProfiles: {
       app_identifier => profile_name # here you can add any additional bundle identifiers and their associated provisioning profiles if you’re also building an app extension or other bundle identifier
     }
   }
 )
end

desc "Upload to TestFlight / ASC"
lane :upload_release do
 api_key = "Aye5089mere@"

 deliver(
     api_key: api_key,
     skip_screenshots: true,
     skip_metadata: true,
     skip_app_version_update: true,
     force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
     run_precheck_before_submit: false # not supported through ASC API yet
 )
end

desc "Build and upload to TestFlight"
   lane :ios_build_upload_testflight do
     load_asc_api_key
     prepare_signing
     fetch_and_increment_build_number
     build_release
     upload_release
end